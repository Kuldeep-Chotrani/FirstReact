{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-component/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","Search","placeholder","handleChange","type","onChange","App","state","searchInput","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","style","fontSize","fontFamily","color","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,YAAO,SAAAC,GAAK,OACzB,sBAAKC,UAAW,iBAAhB,UACA,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,eACpB,6BACKL,EAAMI,QAAQE,OAEnB,6BACKN,EAAMI,QAAQG,aCNVC,G,MAAW,SAACR,GAEzB,OADIS,QAAQC,IAAIV,GAGhB,aADA,CACA,OAAKC,UAAY,YAAjB,SAECD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACf,cAAC,EAAD,CAAyBA,QAAUA,GAAtBA,EAAQC,WCRpBQ,G,MAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAElB,uBACAd,UAAY,SACRe,KAAO,SACPF,YAAeA,EACfG,SAAYF,MCqCLG,E,kDArCb,aACC,IAAD,8BACE,gBACKC,MAAQ,CACPR,SAAU,GACVS,YAAa,IAJrB,E,gEAQoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAC5EF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAAUc,S,+BAGvC,IAAD,SACkCE,KAAKR,MAA9BR,EADT,EACSA,SAAUS,EADnB,EACmBA,YACXQ,EAAmBjB,EAASkB,QAChC,SAAAzB,GAAO,OAAIA,EAAQE,KAAKwB,cAAcC,SAASX,EAAYU,kBAE7D,OACE,sBAAK7B,UAAU,MAAf,UACA,8BAAM,oBAAI+B,MAAS,CAACC,SAAW,GAAIC,WAAY,gBAAmBC,MAAO,WAAnE,gCACL,cAAC,EAAD,CACErB,YAAa,gBACbC,aAAgB,SAAAqB,GAAC,OAAI,EAAKV,SAAS,CAACN,YAAagB,EAAEC,OAAOC,WAI7D,cAAC,EAAD,CAAU3B,SAAYiB,W,GA9BVW,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4bc84e82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\nexport const Card = props => (\r\n<div className= \"card-container\">\r\n<img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2`}></img>\r\n    <h2>\r\n        {props.monster.name}\r\n    </h2>\r\n    <h6>\r\n        {props.monster.email}\r\n    </h6>\r\n</div>\r\n);\r\n    ","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css'\r\nexport const CardList = (props) => {\r\n    console.log(props);\r\nreturn(\r\n//<div>hello World</div>\r\n<div className = \"card-list\">\r\n        \r\n{props.monsters.map(monster => (\r\n            <Card key = {monster.id} monster ={monster} /> \r\n            ))}\r\n</div>\r\n)\r\n    \r\n    \r\n\r\n} ","import React from 'react';\r\nimport './search.styles.css';\r\nexport const Search = ({placeholder, handleChange}) =>(\r\n  \r\n    <input \r\n    className = 'search'\r\n        type = 'search'\r\n        placeholder = {placeholder}\r\n        onChange = {handleChange}\r\n    />\r\n \r\n);","\nimport {Component} from 'react';\nimport './App.css';\nimport { CardList } from \"./component/card-list/card-list.component\";\n\nimport { Search } from './component/search-component/search.component';\nclass App extends Component\n{\n  constructor()\n  {\n    super();\n    this.state = {\n          monsters: [],\n          searchInput: ''\n          \n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response =>response.json())\n    .then(users=>this.setState({monsters: users}));\n  }\n  render()\n  {\n    const {monsters, searchInput} = this.state;\n    const filteredMonsters = monsters.filter(\n      monster => monster.name.toLowerCase().includes(searchInput.toLowerCase())\n    );\n    return(\n      <div className=\"App\">\n      <div ><h1 style = {{fontSize : 72, fontFamily: 'Bigelow Rules',   color: '#0ccac4'}}>Monsters Rolodex</h1></div>\n       <Search \n         placeholder ='Enter monster'\n         handleChange = {e => this.setState({searchInput: e.target.value}\n       )}\n       />\n    \n      <CardList monsters = {filteredMonsters}>\n      </CardList>\n    </div>\n    );\n  \n}\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}